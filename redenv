#! /bin/bash

REDENV_VERSION=1.1.2pre

usage() {
    cat <<EOF
Usage: redenv [OPTIONS] DEST_DIR

Options:
  -h, --help            Show this help message and exit
  --version             Show version information and exit
  -r RUBY_EXE, --ruby RUBY_EXE
                        The Ruby interpreter to use, e.g., --ruby ruby1.9.1
                        will use the ruby1.9.1 interpreter to create the new
                        environment.  The default is \`ruby'.
EOF
}

RUBY_EXE="ruby"
if [[ "x-r" = "x$1" ]] || [[ "x--ruby" = "x$1" ]]; then
    shift
    RUBY_EXE="$1"
    shift
fi

if [[ "x-h" = "x$1" ]] || [[ "x--help" = "x$1" ]]; then
    usage
    exit 0
fi

if [[ "x--version" = "x$1" ]]; then
    echo "redenv $REDENV_VERSION"
    exit 0
fi

DEST_DIR="$1"; shift
if [[ "x" = "x$DEST_DIR" ]] || [[ "x" != "x$1" ]]; then
    usage
    exit 1
fi

if [[ -x "$RUBY_EXE" ]]; then
    RUBY_RESOLVED=$RUBY_EXE
elif [[ -x "/usr/bin/$RUBY_EXE" ]]; then
    RUBY_RESOLVED="/usr/bin/$RUBY_EXE"
else
    RUBY_RESOLVED=$(which $RUBY_EXE)
fi
if [[ "x" = "x$RUBY_RESOLVED" ]]; then
    echo "redenv: error: $RUBY_EXE: Ruby version not found" >&2
    exit 1
fi
RUBY_VERSION=$(echo "$RUBY_RESOLVED" | grep -Eo '([0-9.]+)$')
RUBY_BINDIR=$(dirname "$RUBY_RESOLVED")

if ! mkdir -p "$DEST_DIR/bin"; then
    echo "redenv: error: $DEST_DIR/bin: failed to create directory" >&2
    exit 1
fi

cat <<EOF >"$DEST_DIR/bin/activate"
# This file must be used with "source activate" from bash -- you cannot
# run it directly or use it with another shell.

redenv-deactivate() {
    local var=
    local oldval=

    if [[ -n "\$REDENV_ROOT" ]]; then
        if [[ -n "\$_REDENV_OLD_PATH" ]]; then
          export PATH="\$_REDENV_OLD_PATH"
          unset _REDENV_OLD_PATH
        fi

        for var in GEM_HOME GEM_PATH; do
            eval oldval="\\\$_REDENV_OLD_\$var"
            if [[ -n "\$oldval" ]]; then
                eval export \$var="\\\$oldval"
            else
                eval unset \$var
            fi
            eval unset _REDENV_OLD_\$var
        done

        hash -r
    fi

    unset REDENV_ROOT
    if [[ ! "\$1" = "nondestructive" ]] ; then
        unset -f redenv-deactivate
    fi
}
redenv-deactivate nondestructive

redenv-root() {
    local mypath="\$(dirname \$(dirname "\${1}"))"
    ( builtin cd "\$mypath"; builtin pwd; )
}
export REDENV_ROOT="\$(redenv-root \${BASH_SOURCE:-\$0})"
unset -f redenv-root

_REDENV_OLD_PATH="\$PATH"
export PATH="\$REDENV_ROOT/bin:\$PATH"

_REDENV_OLD_GEM_HOME="\$GEM_HOME"
export GEM_HOME="\$REDENV_ROOT"

_REDENV_OLD_GEM_PATH="\$GEM_PATH"
export GEM_PATH="\$REDENV_ROOT"

hash -r
EOF

read -d '' MAYBE_ACTIVATE <<"EOF"
redenv-root() {
    local path="$(dirname $(dirname "${BASH_SOURCE[0]}"))"
    ( builtin cd "$path"; builtin pwd; )
}
REDENV_ROOT_NEW="$(redenv-root)"
unset -f redenv-root
if [[ "x$REDENV_ROOT" != "x$REDENV_ROOT_NEW" ]] \
    || [[ "x$GEM_HOME" != "x$REDENV_ROOT_NEW" ]]; then
    source "$REDENV_ROOT_NEW/bin/activate"
fi
EOF

cat <<EOF >"$DEST_DIR/bin/redenv-fixup"
#! /bin/bash

$MAYBE_ACTIVATE

RUBY="\${1:-\$REDENV_ROOT}/bin/ruby"
find "\${REDENV_ROOT}/bin" -type f -print0 | \\
    xargs -0 sed -i \\
      -e "1 s,^#!.*[/ ]ruby[.0-9]*\$,#! /bin/bash\nexec \${RUBY} -x \"\\\$0\" \"\\\$@\"\n#!ruby," \\
      -e "2 s,^exec [^ ]*,exec \${RUBY},"
EOF
chmod a+x "$DEST_DIR/bin/redenv-fixup"

for COMMAND in ruby gem irb ri; do
    SYSTEM_COMMAND="$RUBY_BINDIR/$COMMAND$RUBY_VERSION"
    if [ -x "$SYSTEM_COMMAND" ]; then
        REDENV_COMMAND="$DEST_DIR/bin/$COMMAND"
        cat <<EOF >"$REDENV_COMMAND"
#! /bin/bash

$MAYBE_ACTIVATE

exec $SYSTEM_COMMAND "\$@"
EOF
        chmod a+x "$REDENV_COMMAND"
        [[ "x" != "x$RUBY_VERSION" ]] && \
            cp "$REDENV_COMMAND" "$REDENV_COMMAND$RUBY_VERSION"
    fi
done
exit 0
